/*------------------------------------*\
  开关
\*------------------------------------*/

input {
    appearance: none;
    background: none;
    border: none;
}

.switch {
    position: relative;
    padding: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.switch input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    height: 100%;
}

.switch .track {
    width: 34px;
    height: 14px;
    margin: 5px 3px;
    border-radius: 7px;
    background-color: var(--switch-off-track-color);
    transition-property: all;
    transition-duration: 250ms;
    transition-timing-function: var(--standard-curve);
}

.switch[class~=on] .track {
    background-color: var(--accent-color);
    opacity: 0.5;
}

.switch .thumb {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px;
    border-radius: 50%;
    transform: translateX(-10px);
    transition-property: all;
    transition-duration: 250ms;
    transition-timing-function: var(--standard-curve);
}

.switch[class~=on] .thumb {
    transform: translateX(10px);
}

.switch .thumb::after {
    content: "";
    width: 20px;
    height: 18px;
    border-width: 1px 0;
    border-style: solid;
    border-top-color: var(--surface-hint-color, rgba(255, 255, 255, 0.4));
    border-bottom-color: var(--surface-shade-color, rgba(33, 33, 33, 0.1));
    border-radius: 50%;
    background-color: var(--switch-off-thumb-color);
    box-shadow: var(--shadow-z1);
    pointer-events: none;
    transition-property: all;
    transition-duration: 250ms;
    transition-timing-function: var(--standard-curve);
}

.switch[class~=dark] {
    --surface-hint-color: rgba(255, 255, 255, 0.2);
    --surface-shade-color: rgba(33, 33, 33, 0.2);
}

@media (prefers-color-scheme: dark) {
    .switch {
        --surface-hint-color: rgba(255, 255, 255, 0.2);
        --surface-shade-color: rgba(33, 33, 33, 0.2);
    }
}

.switch[class~=on] .thumb::after {
    border-top-color: var(--surface-hint-color, rgba(255, 255, 255, 0.2));
    border-bottom-color: var(--surface-shade-color, rgba(33, 33, 33, 0.2));
    background-color: var(--accent-color);
}

.switch[class~=on] .thumb::after {
    background-color: var(--accent-color);
}

.switch[class~=dragged] .thumb {
    transition-property: none;
    transform: translateX(clamp(-10px, var(--offset), 10px));
}

/*------------------------------------*\
  复选框
\*------------------------------------*/

input[type=checkbox], input[type=radio] {
    position: absolute;
    width: 100%;
    height: 100%;
}

.checkbox, .radio-button {
    width: 48px;
    height: 48px;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.checkbox svg, .radio-button svg {
    width: 100%;
    height: 100%;
    padding: 12px;
    animation-timing-function: var(--standard-curve);
}

.checkbox path {
    transition-property: fill;
    transition-timing-function: var(--standard-curve);
}

.checkbox[class~=checked] path {
    fill: var(--primary-color);
    d: path("M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z");
}

.checkbox[class~=to-unchecked] path {
    fill: var(--secondary-text-color);
    transition-duration: 200ms;
    animation-name: checkboxToUncheckedA, checkboxToUncheckedB;
    animation-duration: 200ms, 300ms;
    animation-delay: 0ms, 200ms;
    animation-fill-mode: forwards;
}

@keyframes checkboxToUncheckedA {
    0% {
        d: path("M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z");
    }
    100% {
        d: path("M18.3,3.9H5.7c-1,0-1.8,0.8-1.8,1.8v12.6c0,1,0.8,1.8,1.8,1.8h12.6c1,0,1.8-0.8,1.8-1.8V5.7C20.1,4.7,19.3,3.9,18.3,3.9zM12,13.4L10.6,12l1.4-1.4l0,0l0,0l1.4,1.4L12,13.4z");
    }
}

@keyframes checkboxToUncheckedB {
    0% {
        d: path("M13,11v2h-2v-2H13 M18.3,3.9H5.7c-1,0-1.8,0.8-1.8,1.8v12.6c0,1,0.8,1.8,1.8,1.8h12.6c1,0,1.8-0.8,1.8-1.8V5.7C20.1,4.7,19.3,3.9,18.3,3.9z");
    }
    100% {
        d: path("M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z");
    }
}

.checkbox[class~=to-checked] path {
    fill: var(--primary-color);
    transition-duration: calc(500ms / 3);
    animation-name: checkboxToCheckedA, checkboxToCheckedB;
    animation-duration: calc(500ms / 3), calc(500ms * 2/ 3);
    animation-delay: 0ms, calc(500ms / 3);
    animation-fill-mode: forwards;
}

@keyframes checkboxToCheckedA {
    0% {
        d: path("M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z");
    }
    100% {
        d: path("M13,11v2h-2v-2H13 M18.3,3.9H5.7c-1,0-1.8,0.8-1.8,1.8v12.6c0,1,0.8,1.8,1.8,1.8h12.6c1,0,1.8-0.8,1.8-1.8V5.7C20.1,4.7,19.3,3.9,18.3,3.9z");
    }
}

@keyframes checkboxToCheckedB {
    0% {
        d: path("M18.3,3.9H5.7c-1,0-1.8,0.8-1.8,1.8v12.6c0,1,0.8,1.8,1.8,1.8h12.6c1,0,1.8-0.8,1.8-1.8V5.7C20.1,4.7,19.3,3.9,18.3,3.9zM12,13.4L10.6,12l1.4-1.4l0,0l0,0l1.4,1.4L12,13.4z");
    }
    100% {
        d: path("M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z");
    }
}

.checkbox[class~=to-checked] svg, .radio-button[class~=to-checked] svg {
    animation-name: selectionControlStretch, selectionControlShrink;
    animation-duration: calc(500ms / 3), calc(500ms * 2/ 3);
    animation-fill-mode: backwards, forwards;
    animation-delay: 0ms, calc(500ms / 3);
}

.checkbox[class~=to-checked] svg, .radio-button[class~=to-unchecked] svg {
    animation-name: selectionControlTransfromCombine;
    animation-fill-mode: forwards;
    animation-duration: 500ms;
}

@keyframes selectionControlStretch {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(0.9);
    }
}

@keyframes selectionControlShrink {
    0% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes selectionControlTransfromCombine {
    0% {
        transform: scale(1);
    }
    40% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
    }
}

/*------------------------------------*\
  单选按钮
\*------------------------------------*/

.radio-button circle {
    transform-origin: center;
    transition-property: fill, stroke;
    transition-timing-function: var(--standard-curve);
}

.radio-button .dot {
    cx: 12;
    cy: 12;
    r: 5;
    fill: var(--secondary-text-color);
}

.radio-button .stroke {
    cx: 12;
    cy: 12;
    r: 9;
    stroke: var(--secondary-text-color);
    stroke-width: 2;
    fill: transparent;
}

.radio-button[class~=checked] .stroke {
    stroke: var(--accent-color);
    stroke-width: 2;
    fill: transparent;
}

.radio-button[class~=to-checked] .stroke {
    transition-duration: calc(500ms / 3);
    animation-name: radioButtonStrokeToChecked;
    animation-duration: calc(500ms / 3);
    animation-fill-mode: none;
    animation-timing-function: var(--standard-curve);
}

@keyframes radioButtonStrokeToChecked {
    0% {
        r: 9;
        stroke-width: 2;
    }
    100% {
        r: 5;
        stroke-width: 10;
    }
}

.radio-button[class~=to-unchecked] .stroke {
    stroke: var(--secondary-text-color);
    transition-duration: 200ms;
    animation-name: radioButtonStrokeToUnchecked;
    animation-duration: 300ms;
    animation-fill-mode: none;
    animation-timing-function: var(--standard-curve);
    animation-delay: 200ms;
}

@keyframes radioButtonStrokeToUnchecked {
    0% {
        r: 5;
        stroke-width: 10;
    }
    100% {
        r: 9;
        stroke-width: 2;
    }
}

.radio-button .dot {
    cx: 12;
    cy: 12;
    r: 5;
    fill: var(--secondary-text-color);
    visibility: hidden;
}

.radio-button[class~=checked] .dot {
    fill: var(--accent-color);
    visibility: visible;
}

.radio-button[class~=to-checked] .dot {
    fill: var(--accent-color);
    visibility: hidden;
    animation-name: radioButtonDotToChecked;
    animation-duration: calc(500ms * 2 / 3);
    animation-fill-mode: forwards;
    animation-timing-function: var(--standard-curve);
    animation-delay: calc(500ms / 3);
}

@keyframes radioButtonDotToChecked {
    0% {
        r: 8;
        visibility: visible;
    }
    100% {
        r: 5;
        visibility: visible;
    }
}

.radio-button[class~=to-unchecked] .dot {
    fill: var(--secondary-text-color);
    transition-duration: 200ms;
    animation-name: radioButtonDotToUnchecked;
    animation-duration: 200ms;
    animation-fill-mode: none;
    animation-timing-function: var(--standard-curve);
}

@keyframes radioButtonDotToUnchecked {
    0% {
        r: 5;
        visibility: visible;
    }
    100% {
        r: 8;
        visibility: visible;
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/

@media (prefers-color-scheme: light) {
    :root {
        --switch-off-track-color: rgba(0, 0, 0, 0.38);
        --switch-off-thumb-color: #fafafa;
    }
}

.light {
    --switch-off-track-color: rgba(0, 0, 0, 0.38);
    --switch-off-thumb-color: #fafafa;
}

@media (prefers-color-scheme: dark) {
    :root {
        --switch-off-track-color: rgba(255, 255, 255, 0.3);
        --switch-off-thumb-color: #bdbdbd;
    }
}

.dark {
    --switch-off-track-color: rgba(255, 255, 255, 0.3);
    --switch-off-thumb-color: #bdbdbd;
}